/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.pokemon;

import java.util.List;
import javax.swing.DefaultListModel;

import java.util.ArrayList;

/**
 *
 * @author ARTHURSANTOSTAVARESS
 */
public class Bag extends javax.swing.JFrame {

    /**
     * Creates new form Bag
     *
     *
     */
    DefaultListModel<String> computerModel = new DefaultListModel<>();
    DefaultListModel<String> backPackModel = new DefaultListModel<>();
    List<Pokemon> pokemons = new ArrayList<>();

    public Bag() {
        initComponents();

        pokemons.add(new Pokemon("Meowth", "Normal", 18));
        pokemons.add(new Pokemon("Pikachu", "Electric", 25));
        pokemons.add(new Pokemon("Charmander", "Fire", 15));
        pokemons.add(new Pokemon("Bulbasaur", "Grass", 10));
        pokemons.add(new Pokemon("Squirtle", "Water", 12));
        pokemons.add(new Pokemon("Eevee", "Normal", 5));
        pokemons.add(new Pokemon("Jigglypuff", "Fairy", 8));
        pokemons.add(new Pokemon("Onix", "Rock", 20));

        for (Pokemon pokemon : pokemons) {
            computerModel.addElement("Name: " + pokemon.getName() + " Type: " + pokemon.getType() + " Level: " + pokemon.getType());
        }

        this.computerList.setModel(computerModel);
        this.backPackList.setModel(backPackModel);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private void movePokemon(int[] indices, DefaultListModel model, DefaultListModel toModel) {

        for (int index : indices) {
            System.out.println("Index atual: " + index);
        }

        try {

            if (indices.length == 1) {

                for (int i = 0; i < indices.length; i++) {

                    if (indices[i] != -1) {
                        int currentIndex = indices[i];
                        Object currentElemnt = model.get(currentIndex);
                        System.out.println(currentElemnt + " " + currentIndex);
                        model.remove(currentIndex);
                        toModel.addElement(currentElemnt);
                        System.out.println("Tamanho do modelPrimario: " + model.size());
                        System.out.println("Tamanho do model secundario: " + toModel.size());
                    }

                }

            } else {
                Object[] values = new String[indices.length];
                int i = 0;
                for(int indice : indices) {
                    i++;
                    
                    int currentIndex = indice;
                    Object currentElemnt = model.get(currentIndex);
                    values[i- 1] = currentElemnt;     
                }   
                
                for(Object value: values) {
                    model.removeElement(value);
                    toModel.addElement(value);
                }
               
            

            }

        } catch (Exception e) {
            System.out.println(e);
            System.out.println("motherFuck");
        }

    }

    ;
    
    
    private void movePokemonToComputer(DefaultListModel model, DefaultListModel toModel) {
        int[] index = backPackList.getSelectedIndices();
        System.out.println(index);

        for (int i = 0; i < index.length; i++) {

        }

    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        computerList = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        backPackList = new javax.swing.JList<>();
        moveBackPackButton = new javax.swing.JButton();
        moveComputerButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("jLabel1");

        jLabel2.setText("jLabel2");

        jScrollPane1.setViewportView(computerList);

        jScrollPane2.setViewportView(backPackList);

        moveBackPackButton.setText("Move to backpack");
        moveBackPackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moveBackPackButtonActionPerformed(evt);
            }
        });

        moveComputerButton.setText("Return to computer");
        moveComputerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moveComputerButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(101, 101, 101)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(164, 164, 164))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 116, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(81, 81, 81))
            .addGroup(layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addComponent(moveBackPackButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(moveComputerButton)
                .addGap(105, 105, 105))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(moveComputerButton)
                    .addComponent(moveBackPackButton))
                .addContainerGap(150, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void moveBackPackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moveBackPackButtonActionPerformed
        this.movePokemon(computerList.getSelectedIndices(), computerModel, backPackModel);


    }//GEN-LAST:event_moveBackPackButtonActionPerformed

    private void moveComputerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moveComputerButtonActionPerformed
        this.movePokemon(backPackList.getSelectedIndices(), backPackModel, computerModel);


    }//GEN-LAST:event_moveComputerButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Bag.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Bag.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Bag.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Bag.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Bag().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> backPackList;
    private javax.swing.JList<String> computerList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton moveBackPackButton;
    private javax.swing.JButton moveComputerButton;
    // End of variables declaration//GEN-END:variables
}
